 ================================
| TEST "matrix_divided" FUNCTION |
 ================================

 =================
| IMPORT THE FILE |
 =================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

 ===============
| SUCCESS CASES |
 ===============

# Test 1 - A simple integer matrix with 2 rows
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test 2 - A simple integer matrix with 2 rows and negative numbers
>>> matrix = [[-1, -2, -3],[-4, -5, -6]]
>>> matrix_divided(matrix, 3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

# Test 3 - A simple matrix with 2 rows and infinite numbers
>>> matrix = [[1e400, 1e500, 1e600],[1e900, 1e800, 1e700]]
>>> matrix_divided(matrix, 3)
[[inf, inf, inf], [inf, inf, inf]]

 ======================
| ERROR CASES - matrix |
 ======================

# Test 4 - Matrix set as string instead of tuple
>>> matrix = "Hello World!"
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 5 - Matrix with some chars in it
>>> matrix = [[1, "a", 3],[4, 5, "b"],["c", 8, 9]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 6 - Empty matrix
>>> matrix = []
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 7 - Empty matrix with 2 rows
>>> matrix = [[],[]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 8 - Matrix whit lists in lists
>>> matrix = [[[20.0], [35], [15.0]],[[25], [5.0], [28]]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 9 - Matrix values entered as chars
>>> matrix = [['1', '2', '3'],['4', '5', '6']]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 10 - Matrix whit a string in one of the rows
>>> matrix = [[1, 2, 3],[4, 5, 6],"Hello World!"]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 11 - Matrix with a row bigger than the other one
>>> matrix = [[1, 2, 3],[4, 5, 6, 7, 8]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

 ===================
| ERROR CASES - div |
 ===================

# Test 12 - div value is a char
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, "a")
Traceback (most recent call last):
...
TypeError: div must be a number

# Test 13 - div value is 0
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# Test 14 - Div value is None
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
...
TypeError: div must be a number

# Test 15 - Div value is NaN
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, float('nan'))
Traceback (most recent call last):
...
TypeError: div must be a number
